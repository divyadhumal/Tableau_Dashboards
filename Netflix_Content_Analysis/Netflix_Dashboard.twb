<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20252.25.0514.2217                               -->
<workbook original-version='18.1' source-build='2025.2.0 (20252.25.0514.2217)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='netflix_titles (netflix_titles.csv)' inline='true' name='federated.0urja6r0aaq3d81anxiya0l81eze' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='netflix_titles.csv' name='excel-direct.12yryvm0qpi2x71akb0xx1otiu3v'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/DIVYA/OneDrive/Documents/netflix_titles.csv.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.12yryvm0qpi2x71akb0xx1otiu3v' name='netflix_titles' table='[netflix_titles$]' type='table'>
          <columns gridOrigin='A1:L8808:no:A1:L8808:0' header='yes' outcome='6'>
            <column datatype='string' name='show_id' ordinal='0' />
            <column datatype='string' name='type' ordinal='1' />
            <column datatype='string' name='title' ordinal='2' />
            <column datatype='string' name='director' ordinal='3' />
            <column datatype='string' name='cast' ordinal='4' />
            <column datatype='string' name='country' ordinal='5' />
            <column datatype='string' name='date_added' ordinal='6' />
            <column datatype='integer' name='release_year' ordinal='7' />
            <column datatype='string' name='rating' ordinal='8' />
            <column datatype='string' name='duration' ordinal='9' />
            <column datatype='string' name='listed_in' ordinal='10' />
            <column datatype='string' name='description' ordinal='11' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L8808:no:A1:L8808:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>show_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[show_id]</local-name>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias>show_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[netflix!titles_BE1C7DA6700240BE9862969759ADC650]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[netflix!titles_BE1C7DA6700240BE9862969759ADC650]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[title]</local-name>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias>title</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[netflix!titles_BE1C7DA6700240BE9862969759ADC650]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>director</remote-name>
            <remote-type>130</remote-type>
            <local-name>[director]</local-name>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias>director</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[netflix!titles_BE1C7DA6700240BE9862969759ADC650]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cast</remote-name>
            <remote-type>130</remote-type>
            <local-name>[cast]</local-name>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias>cast</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[netflix!titles_BE1C7DA6700240BE9862969759ADC650]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[netflix!titles_BE1C7DA6700240BE9862969759ADC650]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_added</remote-name>
            <remote-type>130</remote-type>
            <local-name>[date_added]</local-name>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias>date_added</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[netflix!titles_BE1C7DA6700240BE9862969759ADC650]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>release_year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[release_year]</local-name>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias>release_year</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[netflix!titles_BE1C7DA6700240BE9862969759ADC650]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>130</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[netflix!titles_BE1C7DA6700240BE9862969759ADC650]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration</remote-name>
            <remote-type>130</remote-type>
            <local-name>[duration]</local-name>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias>duration</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[netflix!titles_BE1C7DA6700240BE9862969759ADC650]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>listed_in</remote-name>
            <remote-type>130</remote-type>
            <local-name>[listed_in]</local-name>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias>listed_in</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[netflix!titles_BE1C7DA6700240BE9862969759ADC650]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[description]</local-name>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[netflix!titles_BE1C7DA6700240BE9862969759ADC650]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Duration_Num' datatype='integer' name='[Calculation_273593730664226816]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([duration], &quot;min&quot;) THEN&#13;&#10;INT (REPLACE ([duration], &quot; min&quot;, &quot;&quot;))&#13;&#10;ELSE &#13;&#10;NULL&#13;&#10;END' />
      </column>
      <column caption='Duration_Range' datatype='string' name='[Calculation_273593730666983425]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_273593730664226816] &lt;30 THEN &quot;&lt;30 min&quot;&#13;&#10;ELSEIF [Calculation_273593730664226816] &lt;60 THEN &quot;&lt;30-59 min&quot;&#13;&#10;ELSEIF [Calculation_273593730664226816] &lt;90 THEN &quot;&lt;60-89 min&quot;&#13;&#10;ELSE &quot;90+ min&quot;&#13;&#10;END' />
      </column>
      <column caption='netflix_titles' datatype='table' name='[__tableau_internal_object_id__].[netflix!titles_BE1C7DA6700240BE9862969759ADC650]' role='measure' type='quantitative' />
      <column caption='Cast' datatype='string' name='[cast]' role='dimension' type='nominal' />
      <column aggregation='CountD' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Date Added' datatype='string' name='[date_added]' role='dimension' type='nominal' />
      <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
      <column caption='Director' datatype='string' name='[director]' role='dimension' type='nominal' />
      <column caption='Duration' datatype='string' name='[duration]' role='dimension' type='nominal' />
      <column caption='Listed In' datatype='string' name='[listed_in]' role='dimension' type='nominal' />
      <column caption='Rating' datatype='string' name='[rating]' role='dimension' type='nominal' />
      <column caption='Release Year' datatype='integer' name='[release_year]' role='dimension' type='quantitative' />
      <column caption='Show Id' datatype='string' name='[show_id]' role='dimension' type='nominal' />
      <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[release_year]' derivation='None' name='[none:release_year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[country]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,Type)' hidden='true' name='[Action (Country,Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[country]' />
          <groupfilter function='level-members' level='[type]' />
        </groupfilter>
      </group>
      <group caption='Action (Director)' hidden='true' name='[Action (Director)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[director]' />
        </groupfilter>
      </group>
      <group caption='Action (Rating)' hidden='true' name='[Action (Rating)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[rating]' />
        </groupfilter>
      </group>
      <group caption='Action (Release Year)' hidden='true' name='[Action (Release Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:release_year:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Type)' hidden='true' name='[Action (Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[type]' />
        </groupfilter>
      </group>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/DIVYA/AppData/Local/Temp/TableauTemp/#TableauTemp_17c43x10wn4o3r149gwz00e2xvow.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/13/2025 01:37:57 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>show_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[show_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>show_id</remote-alias>
              <ordinal>0</ordinal>
              <family>netflix_titles</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8807</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[netflix!titles_BE1C7DA6700240BE9862969759ADC650]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>type</remote-alias>
              <ordinal>1</ordinal>
              <family>netflix_titles</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[netflix!titles_BE1C7DA6700240BE9862969759ADC650]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>title</remote-name>
              <remote-type>129</remote-type>
              <local-name>[title]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>title</remote-alias>
              <ordinal>2</ordinal>
              <family>netflix_titles</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8807</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[netflix!titles_BE1C7DA6700240BE9862969759ADC650]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>director</remote-name>
              <remote-type>129</remote-type>
              <local-name>[director]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>director</remote-alias>
              <ordinal>3</ordinal>
              <family>netflix_titles</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2641</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[netflix!titles_BE1C7DA6700240BE9862969759ADC650]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cast</remote-name>
              <remote-type>129</remote-type>
              <local-name>[cast]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cast</remote-alias>
              <ordinal>4</ordinal>
              <family>netflix_titles</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6225</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[netflix!titles_BE1C7DA6700240BE9862969759ADC650]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>5</ordinal>
              <family>netflix_titles</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>408</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[netflix!titles_BE1C7DA6700240BE9862969759ADC650]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date_added</remote-name>
              <remote-type>129</remote-type>
              <local-name>[date_added]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date_added</remote-alias>
              <ordinal>6</ordinal>
              <family>netflix_titles</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1440</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[netflix!titles_BE1C7DA6700240BE9862969759ADC650]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>release_year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[release_year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>release_year</remote-alias>
              <ordinal>7</ordinal>
              <family>netflix_titles</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>85</approx-count>
              <contains-null>true</contains-null>
              <object-id>[netflix!titles_BE1C7DA6700240BE9862969759ADC650]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rating</remote-name>
              <remote-type>129</remote-type>
              <local-name>[rating]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>rating</remote-alias>
              <ordinal>8</ordinal>
              <family>netflix_titles</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[netflix!titles_BE1C7DA6700240BE9862969759ADC650]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>duration</remote-name>
              <remote-type>129</remote-type>
              <local-name>[duration]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>duration</remote-alias>
              <ordinal>9</ordinal>
              <family>netflix_titles</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>216</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[netflix!titles_BE1C7DA6700240BE9862969759ADC650]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>listed_in</remote-name>
              <remote-type>129</remote-type>
              <local-name>[listed_in]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>listed_in</remote-alias>
              <ordinal>10</ordinal>
              <family>netflix_titles</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>466</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[netflix!titles_BE1C7DA6700240BE9862969759ADC650]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>description</remote-name>
              <remote-type>129</remote-type>
              <local-name>[description]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>description</remote-alias>
              <ordinal>11</ordinal>
              <family>netflix_titles</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8807</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[netflix!titles_BE1C7DA6700240BE9862969759ADC650]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina, France, United States, Germany, Qatar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Australia, United Kingdom, Canada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil, France, Germany&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Canada, Germany, South Africa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Canada, United States, Cayman Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;China, Germany, India, United States&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Croatia, Slovenia, Serbia, Montenegro&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Denmark, United Kingdom, Sweden&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;France, Belgium, Italy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;France, Japan, United States&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;France, United States, Canada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Germany, United Kingdom, United States&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;India, United Kingdom&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ireland, Switzerland, United Kingdom, France, United States&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Italy, France, Switzerland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kuwait, United States&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico, France, Colombia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Zealand, United States&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Peru, United States, United Kingdom&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Africa, Angola&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Spain, Belgium, United States&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Spain, United Kingdom&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Taiwan, Malaysia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Kingdom,&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Kingdom, Czech Republic, United States, Germany, Bahamas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Kingdom, Germany, Canada, United States&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Kingdom, Lithuania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Kingdom, Thailand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States, Australia, China&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States, Canada, Ireland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States, France, Canada, Spain&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States, Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States, Japan, Canada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States, South Korea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States, United Kingdom, Germany, Hungary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Australia, France, Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium, France&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Canada, Australia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Canada, South Africa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile, Brazil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;China, United States, Canada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Denmark, France, United States, Sweden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Finland, Germany, Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;France, China, Japan, United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;France, Senegal, Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Germany, France&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;India, Japan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Israel, Germany, Poland, Luxembourg, Belgium, France, United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malaysia, Singapore, Hong Kong&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Netherlands, Denmark, South Africa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norway, United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal, Spain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Korea, Czech Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Spain, Germany, Denmark, United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Switzerland, United Kingdom, United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United Kingdom, Canada, Japan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United Kingdom, France, Germany, United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United Kingdom, Ireland, United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United Kingdom, South Africa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United Kingdom, United States, Japan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States, Cambodia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States, Czech Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States, Germany, Mexico&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States, Ireland, United Kingdom, India&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States, Nigeria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States, United Kingdom, Australia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uruguay, Argentina, Spain&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina, Brazil, France, Poland, Germany, Denmark&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Australia, New Zealand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Belgium, United Kingdom&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Canada, France, Italy, Morocco, United States&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Canada, United Kingdom&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chile, Spain, Argentina, Germany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia, Mexico, United States&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Denmark, Singapore, Canada, United States&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;France, Algeria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;France, Germany, Switzerland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;France, United Kingdom&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Germany, Italy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hong Kong, China, United States&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;India, Pakistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ireland, Canada, United States, United Kingdom&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy, Belgium&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mexico, Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pakistan, United States&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Romania, Bulgaria, Hungary&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore, United States&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Soviet Union, India&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spain, Mexico, France&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United Arab Emirates, United Kingdom, India&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United Kingdom, China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United Kingdom, France, United States, Belgium&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United Kingdom, Japan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United Kingdom, Spain&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United States, Canada, China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United States, France&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United States, Ghana, Burkina Faso, United Kingdom, Germany, Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United States, Italy, France, Japan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United States, Russia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United States, United Kingdom, Denmark, Sweden&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Argentina, United States, Mexico&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brazil, United States&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Canada, Ireland, United States&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Canada, United States, India, United Kingdom&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;China, Japan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Czech Republic, United Kingdom, France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Egypt, Algeria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;France, Belgium, United States&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;France, Luxembourg, United States&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Georgia, Germany, France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Germany, United States, Hong Kong, Singapore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;India, United States&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ireland, United Kingdom, Italy, United States&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Italy, Switzerland, Albania, Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lebanon, Palestine, Denmark, Qatar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mexico, United States, Spain, Colombia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norway, Denmark&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Philippines, Singapore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Russia, United States, China&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Africa, United States&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Spain, France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sweden, Czech Republic, United Kingdom, Denmark, Netherlands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Thailand, United States&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United Kingdom, Australia, France, United States&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United Kingdom, France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United Kingdom, Germany, United States&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United Kingdom, Nigeria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United Kingdom, United States, Canada&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United States, Belgium, Canada, France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United States, Chile, Israel&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United States, France, Mexico&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United States, India&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United States, Mexico, Colombia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United States, Spain, Germany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United States, United Kingdom, Morocco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina, Italy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Australia, United Kingdom, United Arab Emirates, Canada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil, India, China, United States&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Canada, Hungary, United States&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Canada, United States, Denmark&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;China, Hong Kong&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Denmark, United States&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;France, Belgium, Luxembourg, Cambodia,&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;France, Lebanon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;France, United States, Mexico&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Germany, United States&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary, United States&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;India, United Kingdom, Canada, United States&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ireland, United Kingdom&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Italy, Germany&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mexico, Netherlands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Russia, Poland, Serbia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Africa, China, United States&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Spain, Canada, United States&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Spain, United Kingdom, United States&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United Kingdom, Australia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United Kingdom, Denmark, Canada, Croatia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United Kingdom, Germany, France, United States&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United Kingdom, Malawi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United Kingdom, Ukraine, United States&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United States, Australia, Mexico&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United States, Canada, Japan, Panama&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United States, France, Denmark&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United States, Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United States, Kazakhstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United States, South Korea, China&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United States, United Kingdom, India&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Argentina, Chile&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Australia, New Zealand, United States&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Belgium, United Kingdom, United States&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canada, France, United States&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canada, United Kingdom, Netherlands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chile, United States, France&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia, Peru, United Kingdom&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Denmark, Spain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;France, Australia, Germany&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;France, Iran, United States&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;France, United Kingdom, India&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Germany, Jordan, Netherlands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hong Kong, Iceland, United States&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;India, Soviet Union&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ireland, France, Iceland, United States, Mexico, Belgium, United Kingdom, Hong Kong&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italy, Brazil, Greece&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mexico, Brazil&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Zealand, Australia, France, United States&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Paraguay, Argentina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Romania, France, Switzerland, Germany&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovenia, Croatia, Germany, Czech Republic, Qatar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Spain, Portugal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Taiwan, China&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United Arab Emirates, United States&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United Kingdom, China, United States&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United Kingdom, France, United States, Belgium, Luxembourg, China, Germany&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United Kingdom, Japan, United States&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United Kingdom, Spain, Belgium&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United States,&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United States, Canada, France&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United States, France, Canada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United States, Greece&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United States, Italy, Romania, United Kingdom&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United States, Senegal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United States, United Kingdom, France&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Venezuela, Colombia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Australia, Canada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canada, Nigeria, United States&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chile, Argentina&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;China, United States&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Denmark, France, Belgium, Italy, Netherlands, United States, United Kingdom&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Finland, France&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;France, Canada, United States&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;France, Norway, Lebanon, Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Germany, China, United Kingdom&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece, United States&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;India, Germany, France&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Indonesia, United States&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel, Germany&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Italy, United States, Argentina&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Netherlands, Belgium, United Kingdom, United States&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norway, Sweden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Poland, West Germany&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Serbia, South Korea, Slovenia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Korea, China&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Spain, France, Uruguay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Switzerland, France, Belgium, United States&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Turkey, United States&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom, Canada, France, United States&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom, France, Germany&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom, India, United States&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom, Russia, United States&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom, United States, Germany, Denmark, Belgium, Japan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United States, Brazil, South Korea, Mexico, Japan, Germany&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United States, Colombia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United States, Germany, Australia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United States, Indonesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United States, New Zealand, United Kingdom&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United States, United Arab Emirates&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uruguay, Argentina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;, France, Algeria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Australia, Germany&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium, France, Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Canada, Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Canada, South Korea, United States&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chile, France&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China, United States, United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Denmark, Germany, Belgium, United Kingdom, France&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Finland, Sweden, Norway, Latvia, Germany&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;France, Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;France, South Korea, Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Germany, France, Luxembourg, United Kingdom, United States&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hong Kong, Canada, United States&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;India, Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ireland, Canada&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Israel, Sweden, Germany, Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan, Canada&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands, Germany, Denmark, United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Portugal, United States&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Singapore, France&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Korea, France&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Spain, Italy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Switzerland, United States&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Arab Emirates, Jordan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Kingdom, Canada, United States&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Kingdom, France, Poland, Germany, United States&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Kingdom, Israel, Russia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Kingdom, South Africa, Australia, United States&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Kingdom, United States, Morocco&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United States, Cambodia, Romania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United States, Czech Republic, United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United States, Germany, United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United States, Israel, Italy, South Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United States, Norway, Canada&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United States, United Kingdom, Canada&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uruguay, Germany&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Austria, United States&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Canada, Mexico, Germany, South Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Canada, United States, United Kingdom, France, Luxembourg&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;China, Taiwan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark, Brazil, France, Portugal, Sweden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Egypt, Saudi Arabia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;France, Canada, China, Cambodia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;France, Netherlands, South Africa, Finland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Germany, Belgium&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;India, Germany&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indonesia, South Korea, Singapore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland, United States, United Kingdom&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Italy, United Kingdom, France&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lebanon, United Arab Emirates, France, Switzerland, Germany&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Netherlands, Belgium&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norway, Germany, Sweden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Poland,&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saudi Arabia, United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Spain, France, United Kingdom, United States&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turkey, India&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United Kingdom, Brazil, Germany&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United Kingdom, France, Belgium, United States&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United Kingdom, India&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United Kingdom, Poland, United States&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United Kingdom, United States, France, Germany&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United States, Brazil, India, Uganda, China&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United States, China, Hong Kong&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United States, France, United Kingdom, Japan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United States, India, United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United States, New Zealand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United States, Taiwan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United States, Venezuela&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina, Chile, Peru&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Australia, United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Canada, Germany&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Canada, United Kingdom, United States&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Colombia, United States&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Denmark, Sweden, Israel, United States&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;France, Belgium&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;France, Israel, Germany, United States, United Kingdom&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;France, United Kingdom, United States&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Germany, Sri Lanka&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hong Kong, Taiwan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;India, Switzerland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland, Luxembourg, Belgium&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Italy, Canada, France&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kenya, United States&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mexico, Finland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Zealand, United Kingdom&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Romania, United Kingdom&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Somalia, Kenya, Sudan, South Africa, United States&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain, Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain, Switzerland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Taiwan, China, France, United States&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates, United States, United Kingdom&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Kingdom, China, United States, India&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Kingdom, Germany&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Kingdom, Jordan, Qatar, Iran&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Kingdom, Spain, United States&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United States, Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United States, Canada, Germany&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United States, France, Canada, Belgium&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United States, Greece, Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United States, Italy, United Kingdom, Liechtenstein&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United States, Singapore&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United States, United Kingdom, France, Germany, Japan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Argentina, Uruguay, Serbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria, Czech Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Canada, Japan, Netherlands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Canada, United States, Ireland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;China, Morocco, Hong Kong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Czech Republic, United Kingdom, United States&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Egypt, Austria, United States&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;France, Brazil, Spain, Belgium&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;France, Malta, United States&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Germany, United States, Italy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;India, Australia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ireland, United Kingdom, United States&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Italy, Switzerland, France, Germany&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lebanon, Qatar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Norway, Denmark, Netherlands, Sweden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Philippines, Singapore, Indonesia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Africa, United States, Germany&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Spain, France, Canada&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sweden, Netherlands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United Kingdom, Australia, United States&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United Kingdom, France, Belgium&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United Kingdom, Germany, United States, France&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United Kingdom, Norway, Denmark, Germany, Sweden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United Kingdom, United States, Czech Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States, Bermuda, Ecuador&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States, China&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States, France, Serbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States, India, Bangladesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States, Mexico, Spain, Malta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States, Sweden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States, United Kingdom, New Zealand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Argentina, Uruguay, Spain, France&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austria, Germany&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bulgaria, United States&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Canada, Japan, United States&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Canada, United States, Mexico&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;China, South Korea, United States&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czech Republic, United States&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Egypt, Denmark, Germany&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;France, Canada&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;France, Morocco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Germany, Australia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Germany, United States, Sweden&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;India, Canada&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indonesia, Netherlands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ireland, United States&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Italy, Turkey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lebanon, Syria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norway, Denmark, Sweden&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philippines, United States&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saudi Arabia, Netherlands, Germany, Jordan, United Arab Emirates, United States&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Africa, United States, Japan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain, France, Canada, United States&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sweden, United Kingdom, Finland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkey, Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United Kingdom, Belgium&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United Kingdom, France, Belgium, Canada, United States&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United Kingdom, Hong Kong&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United Kingdom, Pakistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United Kingdom, United States, Dominican Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United States, Botswana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United States, China, Canada&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United States, France, South Korea, Indonesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United States, India, France&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United States, Morocco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United States, Sweden, Norway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United States, United Kingdom, Spain, South Korea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Australia, Armenia, Japan, Jordan, Mexico, Mongolia, New Zealand, Philippines, South Africa, Sweden, United States, Uruguay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cambodia, United States&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada, Nigeria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;China, United Kingdom&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark, China&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;France, Canada, Italy, United States, China&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;France, New Zealand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Germany, Canada, United States&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ghana, United States&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;India, Germany, Austria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indonesia, United Kingdom&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Italy, United States&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lebanon, United States, United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Netherlands, Belgium, Germany, Jordan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Norway, Iceland, United States&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Poland, United States&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Korea, Canada, United States, China&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Spain, France, United States&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Switzerland, France&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Turkey, South Korea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Kingdom, Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Kingdom, France, Canada, Belgium, United States&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Kingdom, India, Sweden&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Kingdom, Russia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Kingdom, United States, France, Italy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United States, Brazil, Japan, Spain, India&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United States, China, United Kingdom&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United States, Germany&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United States, India, United Kingdom&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United States, New Zealand, Japan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United States, Thailand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Australia, France&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Canada, Norway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chile, Argentina, France, Spain, United States&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;China, United States, Australia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Denmark, France, Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Finland, Germany&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;France, Canada, United States, Spain&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;France, Qatar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Germany, Czech Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;India, Iran&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iran, France&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Israel, Germany, France&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jamaica, United States&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Netherlands, Denmark, France, Germany&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Norway, United Kingdom, France, Ireland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Portugal, France, Poland, United States&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Serbia, United States&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Korea, China, United States&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Spain, Germany&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Switzerland, United Kingdom, Australia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United Kingdom, Canada, Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United Kingdom, France, Germany, Spain&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United Kingdom, Ireland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United Kingdom, Singapore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United Kingdom, United States, Ireland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States, Bulgaria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States, Colombia, Mexico&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States, Germany, Canada&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States, Ireland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States, Nicaragua&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States, United Kingdom&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uruguay, Argentina, Germany, Spain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Argentina, Spain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia, United Kingdom, United States, New Zealand, Italy, France&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brazil, Netherlands, United States, Colombia, Austria, Germany&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Canada, India&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Canada, United States, France&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China, Hong Kong, United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Czech Republic, France&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Denmark, Zimbabwe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;France, Belgium, Luxembourg, Romania, Canada, United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;France, Lebanon, United Kingdom&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;France, United States, United Kingdom, Canada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Germany, United States, Canada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;India, United Kingdom, China, Canada, Japan, South Korea, United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ireland, United Kingdom, France, Germany&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Italy, India&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lebanon, Canada, France&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mexico, Spain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nigeria, United Kingdom&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Philippines, Canada, United Kingdom, United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Russia, Spain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Africa, Germany, Netherlands, France&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Spain, Colombia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Spain, United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thailand, Canada, United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Kingdom, Australia, Canada, United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Kingdom, Egypt, United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Kingdom, Germany, Spain, United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Kingdom, Namibia, South Africa, Zimbabwe, United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Kingdom, United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States, Australia, Samoa, United Kingdom&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States, Canada, United Kingdom&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States, France, Italy, United Kingdom&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States, Hungary, Ireland, Canada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States, Malta, France, United Kingdom&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States, South Korea, Japan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States, United Kingdom, Italy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina, France&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Australia, United Kingdom&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazil, France&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Canada, Germany, France, United States&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Canada, United States&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;China, Canada, United States&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Denmark, United Kingdom, South Africa, Sweden, Belgium&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;France, Belgium, China, United States&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;France, Japan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;France, United States&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Germany, United Kingdom&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hong Kong, United States&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;India, Turkey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ireland, South Africa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Italy, France&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mexico, France&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Zealand, United Kingdom, Australia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Peru, Germany, Norway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Romania, United States&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spain, Belgium&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spain, Thailand, United States&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Taiwan, Hong Kong, United States, China&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom, Czech Republic, Germany, United States&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom, Germany, Canada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom, Kenya&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom, Spain, United States, Germany&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United States, Australia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United States, Canada, Indonesia, United Kingdom, China, Singapore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United States, France, Canada, Lebanon, Qatar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United States, Greece, United Kingdom&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United States, Japan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United States, South Africa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United States, United Kingdom, Germany&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;West Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;, South Korea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Australia, India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belgium, Ireland, Netherlands, Germany, Afghanistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Canada, Brazil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Canada, Spain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile, Italy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Denmark, Germany, Belgium, United Kingdom, France, Sweden&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Finland, United States&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;France, Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;France, South Korea, Japan, United States&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany, France, Russia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hong Kong, China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;India, Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ireland, Canada, Luxembourg, United States, United Kingdom, Philippines, India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel, United States&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Japan, Canada, United States&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mauritius, South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Netherlands, Germany, Italy, Canada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pakistan, Norway, United States&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Puerto Rico, United States, Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Singapore, Japan, France&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Korea, Japan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spain, Italy, Argentina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Switzerland, Vatican City, Italy, Germany, France&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United Arab Emirates, Jordan, Lebanon, Saudi Arabia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United Kingdom, Canada, United States, Cayman Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United Kingdom, France, Spain, United States&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United Kingdom, Italy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United Kingdom, South Africa, France&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United Kingdom, United States, Spain, Germany, Greece, Canada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States, Canada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States, Denmark&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States, Germany, United Kingdom, Australia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States, Israel, United Kingdom, Canada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States, Philippines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States, United Kingdom, Canada, China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguay, Guatemala&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Argentina, Venezuela&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Austria, Iraq, United States&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bulgaria, United States, Spain, Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada, Luxembourg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada, United States, United Kingdom&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;China, Spain, South Korea, United States&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Egypt, France&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;France, Canada, Belgium&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;France, Netherlands, Singapore&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany, Australia, France, China&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany, United States, United Kingdom, Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;India, France&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indonesia, Singapore&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ireland, United States, France&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Italy, United Kingdom&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lebanon, United Arab Emirates&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norway, Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saudi Arabia, Syria, Egypt, Lebanon, Kuwait&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Africa, United States, New Zealand, Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain, France, Italy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sweden, United States&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turkey, France, Germany, Poland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United Kingdom, Belgium, Sweden&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United Kingdom, France, Belgium, Ireland, United States&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United Kingdom, Hungary, Australia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United Kingdom, Poland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United Kingdom, United States, France&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United States, Brazil&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United States, China, Colombia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United States, France, United Kingdom&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United States, India, South Korea, China&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United States, Netherlands, Japan, France&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United States, Switzerland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United States, Uruguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Argentina, United States&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Australia, United States&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brazil, United Kingdom&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Canada, India, Thailand, United States, United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Canada, United States, Germany&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;China, India, Nepal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czech Republic, Slovakia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France, Belgium, Spain&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France, Luxembourg, Canada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Germany, United States, France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iceland, Sweden, Belgium&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India, United Kingdom, France, Qatar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ireland, United Kingdom, Greece, France, Netherlands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Italy, South Africa, West Germany, Australia, United States&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon, France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mexico, United States&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philippines, Qatar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Russia, United States&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Africa, Nigeria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Spain, Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Thailand, China, United States&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Kingdom, Australia, France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Kingdom, Finland, Germany, United States, Australia, Japan, France, Ireland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Kingdom, Germany, United Arab Emirates, New Zealand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Kingdom, New Zealand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Kingdom, United States, Australia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United States, Australia, South Africa, United Kingdom&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United States, Chile&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United States, France, Japan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United States, Iceland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United States, Mexico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United States, Spain&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United States, United Kingdom, Japan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Australia, Iraq&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Belgium, Netherlands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Canada, France&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Canada, Spain, France&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile, Peru&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colombia, Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Denmark, Indonesia, Finland, Norway, United Kingdom, Israel, France, United States, Germany, Netherlands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;France, Germany, Czech Republic, Belgium&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;France, Switzerland, Spain, United States, United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Germany, France, United States, Canada, United Kingdom&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hong Kong, China, Singapore&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;India, Nepal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ireland, Canada, United Kingdom, United States&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Japan, United States&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Netherlands, United States&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pakistan, United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Singapore, Malaysia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Korea, United States&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Spain, Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Syria, France, Lebanon, Qatar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United Arab Emirates, Romania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United Kingdom, Canada, United States, Germany&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United Kingdom, France, United States&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United Kingdom, Italy, Israel, Peru, United States&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United Kingdom, South Korea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United Kingdom, West Germany&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United States, Canada, Belgium, United Kingdom&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United States, East Germany, West Germany&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United States, Germany, United Kingdom, Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United States, Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United States, Poland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United States, United Kingdom, Canada, Japan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uruguay, Spain, Mexico&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:type:nk]' type='palette'>
            <map to='#f77b66'>
              <bucket>&quot;TV Show&quot;</bucket>
            </map>
            <map to='#fdab9b'>
              <bucket>&quot;Movie&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='netflix_titles' id='netflix!titles_BE1C7DA6700240BE9862969759ADC650'>
            <properties context=''>
              <relation connection='excel-direct.12yryvm0qpi2x71akb0xx1otiu3v' name='netflix_titles' table='[netflix_titles$]' type='table'>
                <columns gridOrigin='A1:L8808:no:A1:L8808:0' header='yes' outcome='6'>
                  <column datatype='string' name='show_id' ordinal='0' />
                  <column datatype='string' name='type' ordinal='1' />
                  <column datatype='string' name='title' ordinal='2' />
                  <column datatype='string' name='director' ordinal='3' />
                  <column datatype='string' name='cast' ordinal='4' />
                  <column datatype='string' name='country' ordinal='5' />
                  <column datatype='string' name='date_added' ordinal='6' />
                  <column datatype='integer' name='release_year' ordinal='7' />
                  <column datatype='string' name='rating' ordinal='8' />
                  <column datatype='string' name='duration' ordinal='9' />
                  <column datatype='string' name='listed_in' ordinal='10' />
                  <column datatype='string' name='description' ordinal='11' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_6BA1B82147C44349A3BCFD81E914571C]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Netflix Dasboard' type='sheet' worksheet='Type of Content' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Netflix Dasboard' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_6188E8DA23354DBCBB0F008D6B98A810]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Netflix Dasboard' type='sheet' worksheet='Top 10 Countries' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Netflix Dasboard' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_D270F79AEA7543DF85A7C7027F6515CC]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Netflix Dasboard' type='sheet' worksheet='Releases Over Time' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Netflix Dasboard' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_45ED4CD97F854E32A8EFC969ED8EB10F]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Netflix Dasboard' type='sheet' worksheet='Rating Distribution' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Netflix Dasboard' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_9FD3E1300D8949618486D72FFF880464]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Netflix Dasboard' type='sheet' worksheet='Top Directors' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Netflix Dasboard' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6_3732F344FE484C72B578385C5A1B88AE]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Netflix Dasboard' type='sheet' worksheet='Content Distribution by Country' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Netflix Dasboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Content Distribution by Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#f17b79' fontname='Tableau Bold' fontsize='14'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles (netflix_titles.csv)' name='federated.0urja6r0aaq3d81anxiya0l81eze' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0urja6r0aaq3d81anxiya0l81eze'>
            <column-instance column='[title]' derivation='Count' name='[cnt:title:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Director' datatype='string' name='[director]' role='dimension' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column caption='Rating' datatype='string' name='[rating]' role='dimension' type='nominal' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Country)]'>
            <groupfilter function='level-members' level='[country]' user:ui-action-filter='[Action2_6188E8DA23354DBCBB0F008D6B98A810]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Director)]'>
            <groupfilter function='level-members' level='[director]' user:ui-action-filter='[Action5_9FD3E1300D8949618486D72FFF880464]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Rating)]'>
            <groupfilter function='member' level='[rating]' member='&quot;TV-MA&quot;' user:ui-action-filter='[Action4_45ED4CD97F854E32A8EFC969ED8EB10F]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Type)]'>
            <groupfilter function='member' level='[type]' member='&quot;Movie&quot;' user:ui-action-filter='[Action1_6BA1B82147C44349A3BCFD81E914571C]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.0urja6r0aaq3d81anxiya0l81eze].[none:country:nk]' direction='ASC' using='[federated.0urja6r0aaq3d81anxiya0l81eze].[cnt:title:qk]' />
          <slices>
            <column>[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Rating)]</column>
            <column>[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Director)]</column>
            <column>[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Type)]</column>
            <column>[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.0urja6r0aaq3d81anxiya0l81eze].[none:country:nk]' value='#f9e9e0' />
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f9e9e0' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0urja6r0aaq3d81anxiya0l81eze].[cnt:title:qk]' />
              <color column='[federated.0urja6r0aaq3d81anxiya0l81eze].[none:type:nk]' />
              <text column='[federated.0urja6r0aaq3d81anxiya0l81eze].[none:country:nk]' />
              <text column='[federated.0urja6r0aaq3d81anxiya0l81eze].[none:type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{4FC2D323-C3E5-4FB8-8A6B-8EAAE8AA502D}' />
    </worksheet>
    <worksheet name='Duration Analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#f17b79' fontname='Tableau Bold' fontsize='14'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles (netflix_titles.csv)' name='federated.0urja6r0aaq3d81anxiya0l81eze' />
          </datasources>
          <datasource-dependencies datasource='federated.0urja6r0aaq3d81anxiya0l81eze'>
            <column caption='Duration_Num' datatype='integer' name='[Calculation_273593730664226816]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([duration], &quot;min&quot;) THEN&#13;&#10;INT (REPLACE ([duration], &quot; min&quot;, &quot;&quot;))&#13;&#10;ELSE &#13;&#10;NULL&#13;&#10;END' />
            </column>
            <column caption='Duration_Range' datatype='string' name='[Calculation_273593730666983425]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_273593730664226816] &lt;30 THEN &quot;&lt;30 min&quot;&#13;&#10;ELSEIF [Calculation_273593730664226816] &lt;60 THEN &quot;&lt;30-59 min&quot;&#13;&#10;ELSEIF [Calculation_273593730664226816] &lt;90 THEN &quot;&lt;60-89 min&quot;&#13;&#10;ELSE &quot;90+ min&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[title]' derivation='Count' name='[cnt:title:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Director' datatype='string' name='[director]' role='dimension' type='nominal' />
            <column caption='Duration' datatype='string' name='[duration]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_273593730666983425]' derivation='None' name='[none:Calculation_273593730666983425:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column caption='Rating' datatype='string' name='[rating]' role='dimension' type='nominal' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Country)]'>
            <groupfilter function='level-members' level='[country]' user:ui-action-filter='[Action2_6188E8DA23354DBCBB0F008D6B98A810]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Director)]'>
            <groupfilter function='level-members' level='[director]' user:ui-action-filter='[Action5_9FD3E1300D8949618486D72FFF880464]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Rating)]'>
            <groupfilter function='member' level='[rating]' member='&quot;TV-MA&quot;' user:ui-action-filter='[Action4_45ED4CD97F854E32A8EFC969ED8EB10F]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Type)]'>
            <groupfilter function='member' level='[type]' member='&quot;Movie&quot;' user:ui-action-filter='[Action1_6BA1B82147C44349A3BCFD81E914571C]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Type)]</column>
            <column>[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Rating)]</column>
            <column>[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Director)]</column>
            <column>[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
            <format attr='background-color' field='[federated.0urja6r0aaq3d81anxiya0l81eze].[none:type:nk]' value='#f9e9e0' />
            <format attr='background-color' field='[federated.0urja6r0aaq3d81anxiya0l81eze].[none:Calculation_273593730666983425:nk]' value='#f9e9e0' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.0urja6r0aaq3d81anxiya0l81eze].[none:type:nk]' value='#000000' />
            <format attr='font-weight' field='[federated.0urja6r0aaq3d81anxiya0l81eze].[none:type:nk]' value='bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0urja6r0aaq3d81anxiya0l81eze].[cnt:title:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f9e9e0' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0urja6r0aaq3d81anxiya0l81eze].[cnt:title:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.0214917659759521' />
                <format attr='mark-color' value='#72b966' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0urja6r0aaq3d81anxiya0l81eze].[none:type:nk]</rows>
        <cols>[federated.0urja6r0aaq3d81anxiya0l81eze].[none:Calculation_273593730666983425:nk]</cols>
      </table>
      <simple-id uuid='{A1A0C01E-F357-40E6-8D74-618DC735D187}' />
    </worksheet>
    <worksheet name='Rating Distribution'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#f17b79' fontname='Tableau Bold' fontsize='14'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles (netflix_titles.csv)' name='federated.0urja6r0aaq3d81anxiya0l81eze' />
          </datasources>
          <datasource-dependencies datasource='federated.0urja6r0aaq3d81anxiya0l81eze'>
            <column-instance column='[title]' derivation='Count' name='[cnt:title:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Director' datatype='string' name='[director]' role='dimension' type='nominal' />
            <column-instance column='[rating]' derivation='None' name='[none:rating:nk]' pivot='key' type='nominal' />
            <column caption='Rating' datatype='string' name='[rating]' role='dimension' type='nominal' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Country)]'>
            <groupfilter function='level-members' level='[country]' user:ui-action-filter='[Action2_6188E8DA23354DBCBB0F008D6B98A810]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Director)]'>
            <groupfilter function='level-members' level='[director]' user:ui-action-filter='[Action5_9FD3E1300D8949618486D72FFF880464]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Type)]'>
            <groupfilter function='member' level='[type]' member='&quot;Movie&quot;' user:ui-action-filter='[Action1_6BA1B82147C44349A3BCFD81E914571C]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0urja6r0aaq3d81anxiya0l81eze].[none:rating:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:rating:nk]' />
              <groupfilter function='member' level='[none:rating:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0urja6r0aaq3d81anxiya0l81eze].[none:rating:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0urja6r0aaq3d81anxiya0l81eze].[cnt:title:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0urja6r0aaq3d81anxiya0l81eze].[none:rating:nk]</column>
            <column>[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Type)]</column>
            <column>[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Director)]</column>
            <column>[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='background-color' field='[federated.0urja6r0aaq3d81anxiya0l81eze].[cnt:title:qk]' value='#f9e9e0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0urja6r0aaq3d81anxiya0l81eze].[cnt:title:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f9e9e0' />
            <format attr='band-size' scope='cols' value='1' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#00000000' />
            <format attr='border-width' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0urja6r0aaq3d81anxiya0l81eze].[cnt:title:qk]' />
            </encodings>
            <style>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0urja6r0aaq3d81anxiya0l81eze].[none:rating:nk]</rows>
        <cols>[federated.0urja6r0aaq3d81anxiya0l81eze].[cnt:title:qk]</cols>
      </table>
      <simple-id uuid='{C4F207B0-0886-41AB-904D-BC2DF550D42E}' />
    </worksheet>
    <worksheet name='Releases Over Time'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#f17b79' fontname='Tableau Bold' fontsize='14'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles (netflix_titles.csv)' name='federated.0urja6r0aaq3d81anxiya0l81eze' />
          </datasources>
          <datasource-dependencies datasource='federated.0urja6r0aaq3d81anxiya0l81eze'>
            <column aggregation='CountD' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[title]' derivation='CountD' name='[ctd:title:qk]' pivot='key' type='quantitative' />
            <column caption='Director' datatype='string' name='[director]' role='dimension' type='nominal' />
            <column-instance column='[release_year]' derivation='None' name='[none:release_year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[release_year]' derivation='None' name='[none:release_year:qk]' pivot='key' type='quantitative' />
            <column caption='Rating' datatype='string' name='[rating]' role='dimension' type='nominal' />
            <column caption='Release Year' datatype='integer' name='[release_year]' role='dimension' type='quantitative' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Country)]'>
            <groupfilter function='level-members' level='[country]' user:ui-action-filter='[Action2_6188E8DA23354DBCBB0F008D6B98A810]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Director)]'>
            <groupfilter function='level-members' level='[director]' user:ui-action-filter='[Action5_9FD3E1300D8949618486D72FFF880464]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Rating)]'>
            <groupfilter function='member' level='[rating]' member='&quot;TV-MA&quot;' user:ui-action-filter='[Action4_45ED4CD97F854E32A8EFC969ED8EB10F]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Type)]'>
            <groupfilter function='member' level='[type]' member='&quot;Movie&quot;' user:ui-action-filter='[Action1_6BA1B82147C44349A3BCFD81E914571C]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0urja6r0aaq3d81anxiya0l81eze].[none:release_year:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:release_year:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:release_year:ok]' member='1925' />
                <groupfilter function='member' level='[none:release_year:ok]' member='1946' />
                <groupfilter function='member' level='[none:release_year:ok]' member='1947' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0urja6r0aaq3d81anxiya0l81eze].[none:release_year:ok]</column>
            <column>[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Type)]</column>
            <column>[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Rating)]</column>
            <column>[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Director)]</column>
            <column>[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
            <format attr='background-color' value='#f9e9e0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
            <format attr='font-style' value='normal' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0urja6r0aaq3d81anxiya0l81eze].[ctd:title:qk]</rows>
        <cols>[federated.0urja6r0aaq3d81anxiya0l81eze].[none:release_year:qk]</cols>
      </table>
      <simple-id uuid='{D0967AD6-9A6A-460D-A8CE-1179D8A346E0}' />
    </worksheet>
    <worksheet name='Top 10 Countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#f17b79' fontname='Tableau Bold' fontsize='14'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles (netflix_titles.csv)' name='federated.0urja6r0aaq3d81anxiya0l81eze' />
          </datasources>
          <datasource-dependencies datasource='federated.0urja6r0aaq3d81anxiya0l81eze'>
            <column aggregation='CountD' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[title]' derivation='CountD' name='[ctd:title:qk]' pivot='key' type='quantitative' />
            <column caption='Director' datatype='string' name='[director]' role='dimension' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Rating' datatype='string' name='[rating]' role='dimension' type='nominal' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Director)]'>
            <groupfilter function='level-members' level='[director]' user:ui-action-filter='[Action5_9FD3E1300D8949618486D72FFF880464]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Rating)]'>
            <groupfilter function='member' level='[rating]' member='&quot;TV-MA&quot;' user:ui-action-filter='[Action4_45ED4CD97F854E32A8EFC969ED8EB10F]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Type)]'>
            <groupfilter function='member' level='[type]' member='&quot;Movie&quot;' user:ui-action-filter='[Action1_6BA1B82147C44349A3BCFD81E914571C]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0urja6r0aaq3d81anxiya0l81eze].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNTD([title])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;, France, Algeria&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;, South Korea&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Argentina&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Argentina, Brazil, France, Poland, Germany, Denmark&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Argentina, Chile&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Argentina, Chile, Peru&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Argentina, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Argentina, France, United States, Germany, Qatar&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Argentina, Italy&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Argentina, Spain&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Argentina, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Argentina, United States, Mexico&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Argentina, Uruguay, Serbia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Argentina, Uruguay, Spain, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Argentina, Venezuela&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia, Armenia, Japan, Jordan, Mexico, Mongolia, New Zealand, Philippines, South Africa, Sweden, United States, Uruguay&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia, Canada&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia, France, Ireland&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia, Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia, India&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia, Iraq&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia, New Zealand&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia, New Zealand, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia, United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia, United Kingdom, Canada&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia, United Kingdom, United Arab Emirates, Canada&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia, United Kingdom, United States, New Zealand, Italy, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Austria&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Austria, Czech Republic&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Austria, Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Austria, Iraq, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Austria, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Bangladesh&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Belarus&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Belgium&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Belgium, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Belgium, France, Netherlands&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Belgium, Ireland, Netherlands, Germany, Afghanistan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Belgium, Netherlands&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Belgium, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Belgium, United Kingdom, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil, France, Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil, India, China, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil, Netherlands, United States, Colombia, Austria, Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Bulgaria&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Bulgaria, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Bulgaria, United States, Spain, Canada&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Cambodia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Cambodia, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Cameroon&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, Australia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, Belgium&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, Brazil&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, France, Italy, Morocco, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, France, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, Germany, France, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, Germany, South Africa&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, Hungary, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, India&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, India, Thailand, United States, United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, Ireland, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, Japan, Netherlands&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, Japan, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, Luxembourg&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, Mexico, Germany, South Africa&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, Nigeria&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, Nigeria, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, Norway&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, South Africa&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, South Korea, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, Spain&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, Spain, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, United Kingdom, Netherlands&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, United Kingdom, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, United States, Cayman Islands&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, United States, Denmark&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, United States, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, United States, Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, United States, India, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, United States, Ireland&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, United States, Mexico&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, United States, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, United States, United Kingdom, France, Luxembourg&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Chile&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Chile, Argentina&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Chile, Argentina, France, Spain, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Chile, Brazil&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Chile, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Chile, Italy&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Chile, Peru&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Chile, Spain, Argentina, Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Chile, United States, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;China, Canada, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;China, Germany, India, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;China, Hong Kong&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;China, Hong Kong, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;China, India, Nepal&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;China, Japan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;China, Morocco, Hong Kong&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;China, South Korea, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;China, Spain, South Korea, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;China, Taiwan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;China, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;China, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;China, United States, Australia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;China, United States, Canada&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;China, United States, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Colombia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Colombia, Mexico&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Colombia, Mexico, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Colombia, Peru, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Colombia, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Croatia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Croatia, Slovenia, Serbia, Montenegro&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Cyprus&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Czech Republic, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Czech Republic, Slovakia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Czech Republic, United Kingdom, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Czech Republic, United Kingdom, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Czech Republic, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark, Brazil, France, Portugal, Sweden&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark, China&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark, France, Belgium, Italy, Netherlands, United States, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark, France, Poland&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark, France, United States, Sweden&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark, Germany, Belgium, United Kingdom, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark, Germany, Belgium, United Kingdom, France, Sweden&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark, Indonesia, Finland, Norway, United Kingdom, Israel, France, United States, Germany, Netherlands&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark, Singapore, Canada, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark, Spain&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark, Sweden, Israel, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark, United Kingdom, South Africa, Sweden, Belgium&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark, United Kingdom, Sweden&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark, Zimbabwe&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Egypt&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Egypt, Algeria&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Egypt, Austria, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Egypt, Denmark, Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Egypt, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Egypt, Saudi Arabia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Finland&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Finland, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Finland, Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Finland, Germany, Belgium&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Finland, Sweden, Norway, Latvia, Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Finland, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Algeria&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Australia, Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Belgium&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Belgium, China, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Belgium, Italy&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Belgium, Luxembourg, Cambodia,&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Belgium, Luxembourg, Romania, Canada, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Belgium, Spain&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Belgium, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Brazil, Spain, Belgium&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Canada&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Canada, Belgium&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Canada, China, Cambodia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Canada, Italy, United States, China&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Canada, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Canada, United States, Spain&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, China, Japan, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Egypt&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Germany, Czech Republic, Belgium&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Germany, Switzerland&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Iran, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Israel, Germany, United States, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Japan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Japan, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Lebanon&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Lebanon, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Luxembourg, Canada&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Luxembourg, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Malta, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Morocco&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Netherlands, Singapore&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Netherlands, South Africa, Finland&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, New Zealand&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Norway, Lebanon, Belgium&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Qatar&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Senegal, Belgium&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, South Korea, Japan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, South Korea, Japan, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Switzerland, Spain, United States, United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, United Kingdom, India&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, United Kingdom, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, United States, Canada&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, United States, Mexico&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France, United States, United Kingdom, Canada&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Georgia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Georgia, Germany, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, Australia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, Australia, France, China&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, Belgium&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, Canada, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, China, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, Czech Republic&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, France, Luxembourg, United Kingdom, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, France, Russia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, France, United States, Canada, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, Italy&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, Jordan, Netherlands&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, Sri Lanka&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, United Kingdom, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, United States, Canada&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, United States, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, United States, Hong Kong, Singapore&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, United States, Italy&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, United States, Sweden&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, United States, United Kingdom, Canada&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Ghana&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Ghana, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Greece, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Guatemala&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Hong Kong&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Hong Kong, Canada, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Hong Kong, China&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Hong Kong, China, Singapore&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Hong Kong, China, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Hong Kong, Iceland, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Hong Kong, Taiwan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Hong Kong, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Hungary&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Hungary, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Iceland&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Iceland, Sweden, Belgium&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;India, Australia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;India, Canada&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;India, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;India, Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;India, Germany, Austria&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;India, Germany, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;India, Iran&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;India, Japan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;India, Malaysia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;India, Mexico&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;India, Nepal&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;India, Pakistan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;India, Soviet Union&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;India, Switzerland&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;India, Turkey&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;India, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;India, United Kingdom, Canada, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;India, United Kingdom, China, Canada, Japan, South Korea, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;India, United Kingdom, France, Qatar&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;India, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Indonesia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Indonesia, Netherlands&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Indonesia, Singapore&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Indonesia, South Korea, Singapore&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Indonesia, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Indonesia, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Iran, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, Canada&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, Canada, Luxembourg, United States, United Kingdom, Philippines, India&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, Canada, United Kingdom, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, Canada, United States, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, France, Iceland, United States, Mexico, Belgium, United Kingdom, Hong Kong&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, Luxembourg, Belgium&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, South Africa&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, Switzerland, United Kingdom, France, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, United Kingdom, France, Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, United Kingdom, Greece, France, Netherlands&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, United Kingdom, Italy, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, United Kingdom, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, United States, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, United States, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Israel&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Israel, Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Israel, Germany, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Israel, Germany, Poland, Luxembourg, Belgium, France, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Israel, Sweden, Germany, Netherlands&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Israel, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy, Belgium&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy, Brazil, Greece&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy, Canada, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy, France, Switzerland&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy, Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy, India&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy, South Africa, West Germany, Australia, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy, Switzerland, Albania, Poland&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy, Switzerland, France, Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy, Turkey&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy, United Kingdom, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy, United States, Argentina&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Jamaica, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Japan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Japan, Canada&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Japan, Canada, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Japan, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Jordan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Kenya&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Kenya, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Kuwait&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Kuwait, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Lebanon&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Lebanon, Canada, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Lebanon, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Lebanon, Palestine, Denmark, Qatar&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Lebanon, Qatar&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Lebanon, Syria&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Lebanon, United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Lebanon, United Arab Emirates, France, Switzerland, Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Lebanon, United States, United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Luxembourg&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Malaysia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Malaysia, Singapore, Hong Kong&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Mauritius&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Mauritius, South Africa&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Mexico&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Mexico, Argentina&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Mexico, Brazil&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Mexico, Finland&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Mexico, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Mexico, France, Colombia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Mexico, Netherlands&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Mexico, Spain&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Mexico, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Mexico, United States, Spain, Colombia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Mozambique&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Namibia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands, Belgium&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands, Belgium, Germany, Jordan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands, Belgium, United Kingdom, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands, Denmark, France, Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands, Denmark, South Africa&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands, Germany, Denmark, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands, Germany, Italy, Canada&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;New Zealand&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;New Zealand, Australia, France, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;New Zealand, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;New Zealand, United Kingdom, Australia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;New Zealand, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Nigeria&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Nigeria, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Norway&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Norway, Denmark&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Norway, Denmark, Netherlands, Sweden&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Norway, Denmark, Sweden&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Norway, Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Norway, Germany, Sweden&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Norway, Iceland, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Norway, Sweden&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Norway, United Kingdom, France, Ireland&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Norway, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Pakistan, Norway, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Pakistan, United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Pakistan, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Paraguay, Argentina&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Peru&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Peru, Germany, Norway&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Peru, United States, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Philippines&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Philippines, Canada, United Kingdom, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Philippines, Qatar&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Philippines, Singapore&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Philippines, Singapore, Indonesia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Philippines, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Poland&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Poland,&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Poland, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Poland, West Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Portugal, France, Poland, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Portugal, Spain&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Portugal, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Puerto Rico, United States, Colombia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Romania&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Romania, Bulgaria, Hungary&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Romania, France, Switzerland, Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Romania, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Romania, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Russia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Russia, Poland, Serbia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Russia, Spain&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Russia, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Russia, United States, China&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Saudi Arabia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Saudi Arabia, Netherlands, Germany, Jordan, United Arab Emirates, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Saudi Arabia, Syria, Egypt, Lebanon, Kuwait&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Saudi Arabia, United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Senegal&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Serbia, South Korea, Slovenia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Serbia, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Singapore&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Singapore, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Singapore, Japan, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Singapore, Malaysia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Singapore, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Slovenia, Croatia, Germany, Czech Republic, Qatar&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Somalia, Kenya, Sudan, South Africa, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;South Africa&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;South Africa, Angola&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;South Africa, China, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;South Africa, Germany, Netherlands, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;South Africa, Nigeria&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;South Africa, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;South Africa, United States, Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;South Africa, United States, Japan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;South Africa, United States, New Zealand, Canada&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;South Korea&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;South Korea, Canada, United States, China&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;South Korea, China&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;South Korea, China, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;South Korea, Czech Republic&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;South Korea, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;South Korea, Japan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;South Korea, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Soviet Union, India&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, Argentina&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, Belgium&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, Belgium, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, Canada, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, Colombia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, Cuba&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, France, Canada&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, France, Canada, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, France, Italy&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, France, United Kingdom, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, France, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, France, Uruguay&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, Germany, Denmark, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, Italy&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, Italy, Argentina&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, Mexico&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, Mexico, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, Portugal&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, Switzerland&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, Thailand, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, United Kingdom, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Sweden&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Sweden, Czech Republic, United Kingdom, Denmark, Netherlands&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Sweden, Netherlands&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Sweden, United Kingdom, Finland&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Sweden, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Switzerland&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Switzerland, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Switzerland, France, Belgium, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Switzerland, United Kingdom, Australia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Switzerland, United Kingdom, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Switzerland, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Switzerland, Vatican City, Italy, Germany, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Syria, France, Lebanon, Qatar&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Taiwan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Taiwan, China&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Taiwan, China, France, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Taiwan, Hong Kong, United States, China&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Taiwan, Malaysia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Thailand&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Thailand, Canada, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Thailand, China, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Thailand, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Turkey&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Turkey, Azerbaijan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Turkey, France, Germany, Poland&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Turkey, India&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Turkey, South Korea&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Turkey, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Ukraine&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Arab Emirates, Jordan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Arab Emirates, Jordan, Lebanon, Saudi Arabia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Arab Emirates, Romania&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Arab Emirates, United Kingdom, India&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Arab Emirates, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Arab Emirates, United States, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom,&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Australia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Australia, Canada, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Australia, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Australia, France, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Australia, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Belgium&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Belgium, Sweden&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Brazil, Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Canada&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Canada, France, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Canada, Italy&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Canada, Japan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Canada, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Canada, United States, Cayman Islands&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Canada, United States, Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, China&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, China, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, China, United States, India&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Czech Republic, Germany, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Czech Republic, United States, Germany, Bahamas&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Denmark, Canada, Croatia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Egypt, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Finland, Germany, United States, Australia, Japan, France, Ireland&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, France, Belgium&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, France, Belgium, Canada, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, France, Belgium, Ireland, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, France, Belgium, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, France, Canada, Belgium, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, France, Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, France, Germany, Spain&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, France, Germany, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, France, Poland, Germany, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, France, Spain, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, France, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, France, United States, Belgium&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, France, United States, Belgium, Luxembourg, China, Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Germany, Canada&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Germany, Canada, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Germany, France, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Germany, Spain, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Germany, United Arab Emirates, New Zealand&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Germany, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Germany, United States, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Hong Kong&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Hungary, Australia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, India&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, India, Sweden&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, India, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Ireland&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Ireland, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Israel, Russia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Italy&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Italy, Israel, Peru, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Japan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Japan, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Jordan, Qatar, Iran&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Kenya&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Lithuania&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Malawi&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Namibia, South Africa, Zimbabwe, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, New Zealand&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Nigeria&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Norway, Denmark, Germany, Sweden&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Pakistan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Poland&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Poland, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Russia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Russia, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Singapore&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, South Africa&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, South Africa, Australia, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, South Africa, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, South Korea&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Spain&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Spain, Belgium&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Spain, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Spain, United States, Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Thailand&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Ukraine, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, United States, Australia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, United States, Canada&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, United States, Czech Republic&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, United States, Dominican Republic&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, United States, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, United States, France, Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, United States, France, Italy&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, United States, Germany, Denmark, Belgium, Japan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, United States, Ireland&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, United States, Japan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, United States, Morocco&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, United States, Spain, Germany, Greece, Canada&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, West Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States,&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Argentina&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Australia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Australia, China&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Australia, Mexico&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Australia, Samoa, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Australia, South Africa, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Belgium, Canada, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Bermuda, Ecuador&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Botswana&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Brazil&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Brazil, India, Uganda, China&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Brazil, Japan, Spain, India&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Brazil, South Korea, Mexico, Japan, Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Bulgaria&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Cambodia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Cambodia, Romania&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Canada&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Canada, Belgium, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Canada, China&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Canada, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Canada, Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Canada, Indonesia, United Kingdom, China, Singapore&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Canada, Ireland&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Canada, Japan, Panama&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Canada, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Chile&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Chile, Israel&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, China&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, China, Canada&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, China, Colombia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, China, Hong Kong&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, China, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Colombia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Colombia, Mexico&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Czech Republic&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Czech Republic, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Denmark&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, East Germany, West Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, France, Canada&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, France, Canada, Belgium&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, France, Canada, Lebanon, Qatar&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, France, Canada, Spain&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, France, Denmark&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, France, Italy, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, France, Japan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, France, Mexico&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, France, Serbia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, France, South Korea, Indonesia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, France, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, France, United Kingdom, Japan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Germany, Australia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Germany, Canada&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Germany, Mexico&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Germany, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Germany, United Kingdom, Australia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Germany, United Kingdom, Italy&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Ghana, Burkina Faso, United Kingdom, Germany, Ethiopia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Greece&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Greece, Brazil&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Greece, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Hong Kong&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Hungary&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Hungary, Ireland, Canada&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Iceland&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, India&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, India, Bangladesh&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, India, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, India, South Korea, China&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, India, United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, India, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Indonesia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Ireland&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Ireland, United Kingdom, India&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Israel, Italy, South Africa&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Israel, United Kingdom, Canada&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Italy&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Italy, France, Japan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Italy, Romania, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Italy, United Kingdom, Liechtenstein&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Japan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Japan, Canada&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Kazakhstan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Malta, France, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Mexico&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Mexico, Colombia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Mexico, Spain, Malta&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Morocco&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Netherlands, Japan, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, New Zealand&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, New Zealand, Japan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, New Zealand, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Nicaragua&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Nigeria&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Norway, Canada&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Philippines&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Poland&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Russia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Senegal&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Singapore&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, South Africa&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, South Korea&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, South Korea, China&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, South Korea, Japan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Spain&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Spain, Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Sweden&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Sweden, Norway&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Switzerland&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Taiwan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Thailand&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, Australia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, Canada&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, Canada, China&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, Canada, Japan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, Denmark, Sweden&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, France, Germany, Japan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, Germany, Hungary&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, India&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, Italy&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, Japan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, Morocco&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, New Zealand&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, Spain, South Korea&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Uruguay&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Venezuela&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Uruguay&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Uruguay, Argentina&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Uruguay, Argentina, Germany, Spain&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Uruguay, Argentina, Spain&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Uruguay, Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Uruguay, Guatemala&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Uruguay, Spain, Mexico&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Venezuela&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Venezuela, Colombia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Vietnam&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;West Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Zimbabwe&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0urja6r0aaq3d81anxiya0l81eze].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0urja6r0aaq3d81anxiya0l81eze].[ctd:title:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0urja6r0aaq3d81anxiya0l81eze].[none:country:nk]</column>
            <column>[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Type)]</column>
            <column>[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Rating)]</column>
            <column>[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Director)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='background-color' field='[federated.0urja6r0aaq3d81anxiya0l81eze].[ctd:title:qk]' value='#f9e9e0' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
            <format attr='band-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f9e9e0' />
            <format attr='band-size' scope='rows' value='1' />
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f17b79' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0urja6r0aaq3d81anxiya0l81eze].[ctd:title:qk]</rows>
        <cols>[federated.0urja6r0aaq3d81anxiya0l81eze].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{FCD60183-84D1-407F-B187-A9FC4BC2A5A6}' />
    </worksheet>
    <worksheet name='Top Directors'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#f17b79' fontname='Tableau Bold' fontsize='14'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles (netflix_titles.csv)' name='federated.0urja6r0aaq3d81anxiya0l81eze' />
          </datasources>
          <datasource-dependencies datasource='federated.0urja6r0aaq3d81anxiya0l81eze'>
            <column-instance column='[title]' derivation='Count' name='[cnt:title:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Director' datatype='string' name='[director]' role='dimension' type='nominal' />
            <column-instance column='[director]' derivation='None' name='[none:director:nk]' pivot='key' type='nominal' />
            <column caption='Rating' datatype='string' name='[rating]' role='dimension' type='nominal' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Country)]'>
            <groupfilter function='level-members' level='[country]' user:ui-action-filter='[Action2_6188E8DA23354DBCBB0F008D6B98A810]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Rating)]'>
            <groupfilter function='member' level='[rating]' member='&quot;TV-MA&quot;' user:ui-action-filter='[Action4_45ED4CD97F854E32A8EFC969ED8EB10F]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Type)]'>
            <groupfilter function='member' level='[type]' member='&quot;Movie&quot;' user:ui-action-filter='[Action1_6BA1B82147C44349A3BCFD81E914571C]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0urja6r0aaq3d81anxiya0l81eze].[none:director:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([title])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:director:nk]' />
                  <groupfilter function='member' level='[none:director:nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0urja6r0aaq3d81anxiya0l81eze].[none:director:nk]</column>
            <column>[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Type)]</column>
            <column>[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Rating)]</column>
            <column>[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
            <format attr='background-color' field='[federated.0urja6r0aaq3d81anxiya0l81eze].[none:director:nk]' value='#f9e9e0' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
            <format attr='background-color' value='#f9e9e0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f17b79' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0urja6r0aaq3d81anxiya0l81eze].[none:director:nk]</rows>
        <cols>[federated.0urja6r0aaq3d81anxiya0l81eze].[cnt:title:qk]</cols>
      </table>
      <simple-id uuid='{12C8156B-9693-4CE2-8C04-D6087EEBC211}' />
    </worksheet>
    <worksheet name='Type of Content'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#f17b79' fontname='Tableau Bold' fontsize='14'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles (netflix_titles.csv)' name='federated.0urja6r0aaq3d81anxiya0l81eze' />
          </datasources>
          <datasource-dependencies datasource='federated.0urja6r0aaq3d81anxiya0l81eze'>
            <column aggregation='CountD' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[title]' derivation='CountD' name='[ctd:title:qk]' pivot='key' type='quantitative' />
            <column caption='Director' datatype='string' name='[director]' role='dimension' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[title]' derivation='CountD' name='[pcto:ctd:title:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Rating' datatype='string' name='[rating]' role='dimension' type='nominal' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Country)]'>
            <groupfilter function='level-members' level='[country]' user:ui-action-filter='[Action2_6188E8DA23354DBCBB0F008D6B98A810]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Director)]'>
            <groupfilter function='level-members' level='[director]' user:ui-action-filter='[Action5_9FD3E1300D8949618486D72FFF880464]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Rating)]'>
            <groupfilter function='member' level='[rating]' member='&quot;TV-MA&quot;' user:ui-action-filter='[Action4_45ED4CD97F854E32A8EFC969ED8EB10F]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0urja6r0aaq3d81anxiya0l81eze].[none:type:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Movie&quot;</bucket>
              <bucket>&quot;TV Show&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Rating)]</column>
            <column>[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Director)]</column>
            <column>[federated.0urja6r0aaq3d81anxiya0l81eze].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
            <format attr='background-color' value='#f9e9e0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0urja6r0aaq3d81anxiya0l81eze].[none:type:nk]' />
              <wedge-size column='[federated.0urja6r0aaq3d81anxiya0l81eze].[ctd:title:qk]' />
              <text column='[federated.0urja6r0aaq3d81anxiya0l81eze].[pcto:ctd:title:qk]' />
              <text column='[federated.0urja6r0aaq3d81anxiya0l81eze].[none:type:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Tableau Bold'><![CDATA[<[federated.0urja6r0aaq3d81anxiya0l81eze].[none:type:nk]>  ]]></run>
                <run>Æ&#10;</run>
                <run fontname='Tableau Bold'><![CDATA[<[federated.0urja6r0aaq3d81anxiya0l81eze].[pcto:ctd:title:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2193922996520996' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D99B043D-91C1-40BE-8427-A4FD8AF07F8E}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Netflix Dasboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#e15759' fontname='Tableau Bold' fontsize='26'>NETFLIX  CONTENT  DASHBOARD  ANALYSIS</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f9e9e08b' />
        </style-rule>
      </style>
      <size maxheight='860' maxwidth='1620' minheight='660' minwidth='1520' sizing-mode='range' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97894' id='50' param='horz' type-v2='layout-flow' w='99012' x='494' y='1053'>
            <zone h='97894' id='47' param='vert' type-v2='layout-flow' w='99012' x='494' y='1053'>
              <zone h='8685' id='48' type-v2='title' w='99012' x='494' y='1053'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='89209' id='45' param='vert' type-v2='layout-flow' w='99012' x='494' y='9738'>
                <zone h='89209' id='43' param='vert' type-v2='layout-flow' w='99012' x='494' y='9738'>
                  <zone h='89209' id='41' param='vert' type-v2='layout-flow' w='99012' x='494' y='9738'>
                    <zone h='89209' id='39' param='vert' type-v2='layout-flow' w='99012' x='494' y='9738'>
                      <zone h='89209' id='37' type-v2='layout-basic' w='99012' x='494' y='9738'>
                        <zone h='19877' id='22' param='vert' type-v2='layout-flow' w='99012' x='494' y='51433'>
                          <zone h='19877' id='29' name='Releases Over Time' w='99012' x='494' y='51433'>
                            <layout-cache minheight='210' type-h='scalable' type-w='fixed' />
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                        </zone>
                        <zone h='41695' id='24' param='horz' type-v2='layout-flow' w='42717' x='56789' y='9738'>
                          <zone h='41695' id='28' name='Top 10 Countries' w='42717' x='56789' y='9738'>
                            <layout-cache cell-count-w='10' minheight='187' non-cell-size-w='68' type-h='scalable' type-w='cell' />
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                        </zone>
                        <zone h='41695' id='26' name='Type of Content' w='24752' x='494' y='9738'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='27637' id='30' param='horz' type-v2='layout-flow' w='43459' x='56047' y='71310'>
                          <zone h='27637' id='33' name='Duration Analysis' w='43459' x='56047' y='71310'>
                            <layout-cache cell-count-w='4' non-cell-size-w='80' type-h='cell' type-w='cell' />
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                        </zone>
                        <zone h='27637' id='31' name='Rating Distribution' w='27777' x='494' y='71310'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='27637' id='34' name='Content Distribution by Country' w='27776' x='28271' y='71310'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='41695' id='36' name='Top Directors' w='31543' x='25246' y='9738'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone fixed-size='32' h='9262' id='51' is-fixed='true' name='Type of Content' pane-specification-id='2' param='[federated.0urja6r0aaq3d81anxiya0l81eze].[none:type:nk]' show-title='false' type-v2='color' w='7963' x='741' y='41745'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontcolor='#e15759' fontname='Tableau Bold' fontsize='26'>NETFLIX  CONTENT  DASHBOARD  ANALYSIS</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1900' minheight='1900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='55' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97866' id='54' param='vert' type-v2='layout-flow' w='99012' x='494' y='1067'>
                <zone h='8800' id='48' type-v2='title' w='99012' x='494' y='1067'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41629' id='26' is-fixed='true' name='Type of Content' w='24752' x='494' y='9867'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='32' h='9262' id='51' name='Type of Content' pane-specification-id='2' param='[federated.0urja6r0aaq3d81anxiya0l81eze].[none:type:nk]' show-title='false' type-v2='color' w='7963' x='741' y='41745'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41629' id='36' is-fixed='true' name='Top Directors' w='31543' x='25246' y='9867'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41629' id='28' is-fixed='true' name='Top 10 Countries' w='42717' x='56789' y='9867'>
                  <layout-cache cell-count-w='10' minheight='187' non-cell-size-w='68' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='163' h='19845' id='29' is-fixed='true' name='Releases Over Time' w='99012' x='494' y='51496'>
                  <layout-cache minheight='210' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='229' h='27592' id='31' is-fixed='true' name='Rating Distribution' w='27777' x='494' y='71341'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='229' h='27592' id='34' is-fixed='true' name='Content Distribution by Country' w='27776' x='28271' y='71341'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='229' h='27592' id='33' is-fixed='true' name='Duration Analysis' w='43459' x='56047' y='71341'>
                  <layout-cache cell-count-w='4' non-cell-size-w='80' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1763FA09-0736-4D83-98DB-39A4DE472AAD}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Type of Content'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0urja6r0aaq3d81anxiya0l81eze].[none:type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0urja6r0aaq3d81anxiya0l81eze].[none:title:nk]</field>
            <field>[federated.0urja6r0aaq3d81anxiya0l81eze].[none:type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9B5E1434-BF9B-4D74-8DE2-DA0449388CE0}' />
    </window>
    <window class='worksheet' name='Top 10 Countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0urja6r0aaq3d81anxiya0l81eze].[none:country:nk]</field>
            <field>[federated.0urja6r0aaq3d81anxiya0l81eze].[none:title:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2D3A8F7F-D510-4548-9F2A-0CDA327C1DAC}' />
    </window>
    <window class='worksheet' name='Releases Over Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0urja6r0aaq3d81anxiya0l81eze].[none:release_year:qk]</field>
            <field>[federated.0urja6r0aaq3d81anxiya0l81eze].[none:title:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E1A5AB44-8587-4301-8B27-9197338D49B6}' />
    </window>
    <window class='worksheet' name='Rating Distribution'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0urja6r0aaq3d81anxiya0l81eze].[cnt:title:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0urja6r0aaq3d81anxiya0l81eze].[none:rating:nk]</field>
            <field>[federated.0urja6r0aaq3d81anxiya0l81eze].[none:title:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{372D1520-0946-4E49-97B8-98BF4DCD926A}' />
    </window>
    <window class='worksheet' name='Top Directors'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0urja6r0aaq3d81anxiya0l81eze].[none:director:nk]</field>
            <field>[federated.0urja6r0aaq3d81anxiya0l81eze].[none:title:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F4551728-25EF-4C02-81B1-ED315E3F2EF6}' />
    </window>
    <window class='worksheet' name='Duration Analysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0urja6r0aaq3d81anxiya0l81eze].[cnt:title:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0urja6r0aaq3d81anxiya0l81eze].[none:Calculation_273593730666983425:nk]</field>
            <field>[federated.0urja6r0aaq3d81anxiya0l81eze].[none:duration:nk]</field>
            <field>[federated.0urja6r0aaq3d81anxiya0l81eze].[none:title:nk]</field>
            <field>[federated.0urja6r0aaq3d81anxiya0l81eze].[none:type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7C92A341-D6E4-4E90-A875-7108DA272719}' />
    </window>
    <window class='worksheet' name='Content Distribution by Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0urja6r0aaq3d81anxiya0l81eze].[none:type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0urja6r0aaq3d81anxiya0l81eze].[Calculation_273593730677456901]</field>
            <field>[federated.0urja6r0aaq3d81anxiya0l81eze].[Calculation_273593730677456902]</field>
            <field>[federated.0urja6r0aaq3d81anxiya0l81eze].[none:country:nk]</field>
            <field>[federated.0urja6r0aaq3d81anxiya0l81eze].[none:title:nk]</field>
            <field>[federated.0urja6r0aaq3d81anxiya0l81eze].[none:type:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{72740A59-14B3-4885-9034-2ACE46487DDA}' />
    </window>
    <window class='dashboard' maximized='true' name='Netflix Dasboard'>
      <viewpoints>
        <viewpoint name='Content Distribution by Country'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Duration Analysis'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Rating Distribution'>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0urja6r0aaq3d81anxiya0l81eze].[cnt:title:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0urja6r0aaq3d81anxiya0l81eze].[none:rating:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0urja6r0aaq3d81anxiya0l81eze].[cnt:title:qk]</field>
                    <field>[federated.0urja6r0aaq3d81anxiya0l81eze].[none:rating:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>2062</value>
                  <value>&quot;TV-MA&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Releases Over Time'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 10 Countries'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top Directors'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Type of Content'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0urja6r0aaq3d81anxiya0l81eze].[ctd:title:qk]</field>
                    <field>[federated.0urja6r0aaq3d81anxiya0l81eze].[none:type:nk]</field>
                    <field>[federated.0urja6r0aaq3d81anxiya0l81eze].[pcto:ctd:title:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>2061</value>
                  <value>&quot;Movie&quot;</value>
                  <value>0.64305772230889235</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <highlight>
            <color-one-way>
              <field>[federated.0urja6r0aaq3d81anxiya0l81eze].[none:type:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='48' />
      <device-preview visible='true' />
      <simple-id uuid='{28A0EF69-6321-4C03-8861-2A853AE835F1}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Content Distribution by Country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Duration Analysis' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAHM0lEQVR4nO3da2zV9R3H8c//9PQCPb0CvVGgMWDlMiausDgcjPhAEx2C2RIWl5lsZg+2
      zGULyfZkLIvb1GSZPNuWJYIThwiGbg4RCIIF0blxUW4qTm5SeqGlLS2H03PO/78Hy1y0cwsR
      +8d+3q+H//zb3/fXnHd/59KkQRRFkQBTSUnK9nUpyufingUYdUlJ/3rw57NxzwKMukTcAwBx
      IgBYIwBYIwBYIwBYIwBYMwog0ub1a/Sz1Y+rb6BXjz76iP6wZa+kSH39A/+5K4oUhpHCMNRg
      z1nteOV1SVIYhuITww/KpAfV231ev3rsMa1+YrPaTx/Xj1b9XHuPnHr/njAMFYahctkh/Xnb
      7vevXS8/yyCKomi4p93gc4C0vveDX6pleqnOpItVP2eRjr/Yqm/cv0y/XduqB7/7Hc1sKtUP
      H3xY/cqqvKhAd375bnVcDHXy8C51dPXrJw//WpNTQdwbuS7sfGGzjpwZ0LJ7lqrz3cPauONV
      1RcM6fb7HtDjT7Rq9U+/rV+sekRn+/pVWVGq+V+6Wx0nTys3dEbn27u07IGVunVGTdzbcDoB
      SrT8jhbtPfiWUqnxGs5kFCYSmjhhoiZWV6m6vFRSXhX1zZpSV6k7bpml9853qbt3QNG4at3W
      XKbe9PXyeyt+44uLlclkdCUzrFRZpYYG+5WLpHQ6rWRhUlKkaFyNWpprteS2L+jc2S51dPXo
      Yiah5YtnqqN3MO4tSLI6AaTNG59SZ7ZM9y9foqeeXK9JzfN1z+Kb1T8wqIryMklp7Wp7U9KA
      GivLdSkoUjqbVCZ9UROSl1U3Z4lqSzkB/i3MZ9X53klt+MsupWqmaNnCmVqzcatuv2u5bpk+
      SbvbDihVnFHFhDpduJTX5UsDChI5zagp0aXxTZrVWB33FkYngDCXV5Tjb42uhSBIKFFYEPcY
      Y0ZyNBY588xOHX1o7WgsNebVzG3SwlUr4h5jbAhDp9cAwEgEAGsEAGsEAGsEAGsEAGsEAGsE
      AGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsE
      AGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsEAGsjAtiz
      vVWtbYf09qFX9btN26QoUhiGH7hn05at//U68GmT/PCFN48e0wn1qrcy0FtnzmrD0Gm9cfqC
      5s29SVH5NJ1/55gy+ct6aVur2g6e0KKlX9fi2Q1xzA58bCNOgCBRpNpUXp1XkipOSIfePaf7
      7mxRR7pQe5/foGxhlTo7O/Xa/r8rl0iqp6c7jrmBa2LECTBvwa0aV5lSdyal4b4pqi8t0PaD
      p/S1FV9VW9ij2YsX6uyJlGY3TlDrS/t1Q8OkOOYGrokgiqJouKddymc/sUVO/XG7jj609hP7
      /k5q5jZp4aoVcY8xNoQh7wLBGwHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHA
      GgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHA
      GgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAWnI0FikdX6CGuqLRWGrMK68dr3z1xLjH
      GCOi0QmgvKxANzSVjMZSY15yapny9Q1xjzFm8BQI1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA
      1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA
      1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1kb8p/gjr+9X96WM
      qioqVDt5mkpyA8oWV6m6JNLuPS9r6k03q7+7XfPnfTaOeYFrakQACof0+ydb9eNv3aXfPP22
      6oeOack3V+qN59ZoX+9EVdUPaNOm9Xp5319171eWa+ufNqtx1gIls/2aVJRTYf109V0Y0hcX
      zIphO8DVGfEUaMaNzaqrrdNnWhYp23lYp9JFurG6SJ9fslSlA//Qc3sOqDBVpRlVaW3a8IwS
      kz+nfbue15HXXtGOvx3Qs+vW6fRgGMdegKs24gQIEkk11NUoSCQ1p75U58vmKBEEOvnOcV0Y
      yqlxaqWCkgbV1BaroHGKdmzfotppM7WwKVDbuRJlz72oRS3NcewFuGpBFEXRcE+7lM/+35vD
      MFQikRhxLQgCBUHwkV+X2blbV9Y9/bGHhZScPVOlK78f9xhjxsjXAP/Dhx/8H3UN+LTg0Qtr
      BABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABr
      BABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABr
      BABrBABrBABr/wQxg+W0M6weXwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Netflix Dasboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Rating Distribution' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Releases Over Time' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 Countries' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top Directors' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Type of Content' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
